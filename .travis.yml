language: java

env:
  - GRADLE_TEST_VERSION=2.12
  - GRADLE_TEST_VERSION=3.5
  - GRADLE_TEST_VERSION=

before_cache:
- rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
- rm -rf $HOME/.gradle/caches/jars-*/
- rm -rf $HOME/.gradle/caches/*/fileHashes/
- rm -rf $HOME/.gradle/caches/*/plugin-resolution/
- rm -rf $HOME/.gradle/caches/*/scripts/
- rm -rf $HOME/.gradle/caches/*/scripts-remapped/
cache:
  directories:
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"
  timeout: 600

addons:
  apt:
    packages:
    - libxml-xpath-perl

before_install:
  # Set $RELEASE env var
  - source ./detectRelease.sh

#before_deploy:
  # Set up git user name and tag this commit
  #- git config --local user.name "Gosu CI"
  #- git config --local user.email "gosu.lang.team@gmail.com"

jobs:
  include:
    - stage: deploy
      env: GRADLE_TEST_VERSION=
      script: skip
      deploy:
        # $RELEASE = false; e.g. publish a snapshot
        provider: script
        skip_cleanup: true
        script: ./gradlew publish
        env: GRADLE_TEST_VERSION=
        on:
          # don't deploy from forks; TODO test with PRs
          repo: gosu-lang/gradle-gosu-plugin
          condition: $RELEASE = false
          all_branches: true

        # $RELEASE = true; e.g. perform the release and publish it
        provider: script
        skip_cleanup: true
        script: ./performRelease.sh
        env: GRADLE_TEST_VERSION=
        on:
          # don't deploy from forks; TODO test with PRs
          repo: gosu-lang/gradle-gosu-plugin
          condition: $RELEASE = true
          all_branches: true

#notifications:
#  slack:
#    secure: K3kwtEQQczbwkw+8OeLnjtgVPPzpNfx+5jnn8r6zI7x641TnkDPb5WMZjhEjZqeK/dyG1NOGcpmNU48EhmHtQoZExPxnMB5VvzRvtxaaNWsFEuC5PeQz4xCkNTYDMB3VnGyA5CEBp3yFNx+SOswjNpNSuXnEV8SbcsgPllN/D6WKT9Wh9uBvr9c1YOxQ8BHAGZYelxARj7EzWAgkDxuSQk3bKY1BfKFCDiMe/y3TDm4SHaYWqgsHAvNVLlEhsOGTKi2rl/gniwsKD8LYOLUwF5exRhV5f/i+Qc4D8i6FKRGR/+ncA4ItW/YPui0+b+z8ca7cTvmFIRG5kkN4IFSVz/YR4bYFfvd4KzN3x7EsRijXD2OJQhPHXwPXh8cdwc3vimn2mDLYt4EMW+U2uP50DMKdZdAoktmmOdzCh3m1h6ONcZ6ul2CpJWWvJWfENAb5zJZd55qrOaSDc+t/2WyIYRDqIyuZsOCGKTcEsPUIunG8udvGhfhkcDKz+1fpr8Xazm4kTSdyu1mpvCiJvPDJGeaZGTM+EOiugIEQFO7LdXVGH3I72PduktbSLmBs91C2/8R4/AYpLdK1Ytc0o7UbZ/zIP+jSffxvEJBwTpuNi/se41MRr2NHVun0UFvTfn4hNtoz8xXwSadNqlxf5zF9a0LzwbfIO07VJkba3Es27wE=
